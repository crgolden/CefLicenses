// <auto-generated />
using System;
using CefClientFeatures.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CefClientFeatures.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CefClientFeatures.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CefClientFeatures.Models.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsCore");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("CefClientFeatures.Relationships.ClientFeature", b =>
                {
                    b.Property<Guid>("Model1Id");

                    b.Property<Guid>("Model2Id");

                    b.HasKey("Model1Id", "Model2Id");

                    b.HasIndex("Model2Id");

                    b.ToTable("ClientFeature");
                });

            modelBuilder.Entity("CefClientFeatures.Relationships.ClientFeature", b =>
                {
                    b.HasOne("CefClientFeatures.Models.Client", "Model1")
                        .WithMany("ClientFeatures")
                        .HasForeignKey("Model1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CefClientFeatures.Models.Feature", "Model2")
                        .WithMany("ClientFeatures")
                        .HasForeignKey("Model2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
